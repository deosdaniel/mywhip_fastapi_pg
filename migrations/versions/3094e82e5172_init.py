"""init

Revision ID: 3094e82e5172
Revises: 
Create Date: 2025-05-28 16:10:01.332011

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3094e82e5172'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cars',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('status', postgresql.ENUM('FRESH', 'REPAIRING', 'DETAILING', 'LISTED', 'SOLD', name='carstatuschoices', create_type=False), nullable=False),
    sa.Column('make', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('model', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('vin', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pts_num', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('sts_num', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_purchased', sa.Date(), nullable=False),
    sa.Column('price_purchased', sa.Integer(), nullable=False),
    sa.Column('date_listed', sa.Date(), nullable=True),
    sa.Column('price_listed', sa.Integer(), nullable=True),
    sa.Column('date_sold', sa.Date(), nullable=True),
    sa.Column('price_sold', sa.Integer(), nullable=True),
    sa.Column('autoteka_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('avito_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('autoru_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('drom_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_index(op.f('ix_cars_year'), 'cars', ['year'], unique=False)
    op.create_table('users',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('expenses',
    sa.Column('uid', sa.UUID(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exp_summ', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), nullable=False),
    sa.Column('car_uid', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['car_uid'], ['cars.uid'], ),
    sa.PrimaryKeyConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('expenses')
    op.drop_table('users')
    op.drop_index(op.f('ix_cars_year'), table_name='cars')
    op.drop_table('cars')
    # ### end Alembic commands ###
